{"ast":null,"code":"import _asyncToGenerator from \"/Users/shuweikuo/Documents/Documents - shuwei\\u7684MacBook Pro/angular-ivy-dbtepp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { map, switchMap, BehaviorSubject, catchError, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConfigService {\n  constructor(http) {\n    this.http = http;\n    this.HOST = \"https://www.sitata.com/api/v2/\";\n    this.SERVICE = {\n      travelRestrictions: \"countries/{country_id}/travel_restrictions\",\n      profile: \"users/my_profile\",\n      forSocket: \"tokens/for_socket?for_socket=true\",\n      entryRequirements: \"entry_requirements?departure=TW&destination=\",\n      countries: \"countries\"\n    };\n    this.headers = new HttpHeaders().set('Authorization', 'TKN 7e814cb0-c4c3-4f00-ac69-24ce6ecad1c5');\n    this.country = new BehaviorSubject('');\n    this.currentCountry = this.country;\n  }\n\n  getCountries() {\n    return this.http.get([this.HOST, this.SERVICE.countries].join(''), {\n      'headers': this.headers\n    }).pipe(map( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        return data;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n\n  selectCountry(item) {\n    this.country.next(item);\n  }\n\n  getTravelRestriction(countryCode) {\n    if (!countryCode) return [{\n      'start': 'no data',\n      'comment': 'no data'\n    }];\n    const headers = new HttpHeaders().set('Authorization', 'TKN 7e814cb0-c4c3-4f00-ac69-24ce6ecad1c5');\n    return this.currentCountry.pipe(catchError( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (err) {\n        return console.error(err);\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()), switchMap(result => this.http.get([this.HOST, this.SERVICE.entryRequirements, result].join(''), {\n      headers\n    }).pipe(switchMap( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (data) {\n        return data;\n      });\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()))), tap(data => {\n      return data;\n    }));\n  }\n\n}\n\nConfigService.ɵfac = function ConfigService_Factory(t) {\n  return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigService,\n  factory: ConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/shuweikuo/Documents/Documents - shuwei的MacBook Pro/angular-ivy-dbtepp/src/app/config/config-service.ts"],"names":["HttpHeaders","map","switchMap","BehaviorSubject","catchError","tap","i0","i1","ConfigService","constructor","http","HOST","SERVICE","travelRestrictions","profile","forSocket","entryRequirements","countries","headers","set","country","currentCountry","getCountries","get","join","pipe","data","selectCountry","item","next","getTravelRestriction","countryCode","err","console","error","result","ɵfac","ConfigService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { map, switchMap, BehaviorSubject, catchError, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConfigService {\n    constructor(http) {\n        this.http = http;\n        this.HOST = \"https://www.sitata.com/api/v2/\";\n        this.SERVICE = {\n            travelRestrictions: \"countries/{country_id}/travel_restrictions\",\n            profile: \"users/my_profile\",\n            forSocket: \"tokens/for_socket?for_socket=true\",\n            entryRequirements: \"entry_requirements?departure=TW&destination=\",\n            countries: \"countries\",\n        };\n        this.headers = new HttpHeaders()\n            .set('Authorization', 'TKN 7e814cb0-c4c3-4f00-ac69-24ce6ecad1c5');\n        this.country = new BehaviorSubject('');\n        this.currentCountry = this.country;\n    }\n    getCountries() {\n        return this.http.get([this.HOST, this.SERVICE.countries].join(''), { 'headers': this.headers }).pipe(map(async (data) => data));\n    }\n    selectCountry(item) {\n        this.country.next(item);\n    }\n    getTravelRestriction(countryCode) {\n        if (!countryCode)\n            return [{ 'start': 'no data', 'comment': 'no data' }];\n        const headers = new HttpHeaders().set('Authorization', 'TKN 7e814cb0-c4c3-4f00-ac69-24ce6ecad1c5');\n        return this.currentCountry.pipe(catchError(async (err) => console.error(err)), switchMap(result => this.http.get([this.HOST, this.SERVICE.entryRequirements, result].join(''), { headers })\n            .pipe(switchMap(async (data) => data))), tap(data => {\n            return data;\n        }));\n    }\n}\nConfigService.ɵfac = function ConfigService_Factory(t) { return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient)); };\nConfigService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ConfigService, factory: ConfigService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}